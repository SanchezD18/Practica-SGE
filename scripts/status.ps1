# ===========================================
# SCRIPT PARA VER ESTADO DE SERVICIOS
# ===========================================

param(
    [switch]$Detailed,
    [switch]$Health
)

Write-Host "üìä Estado de SGE - Sistema de Gesti√≥n Empresarial" -ForegroundColor Blue
Write-Host "===============================================" -ForegroundColor Blue

# Verificar si Docker est√° ejecut√°ndose
try {
    docker --version | Out-Null
} catch {
    Write-Host "‚ùå Error: Docker Desktop no est√° ejecut√°ndose" -ForegroundColor Red
    exit 1
}

# Mostrar estado de servicios
Write-Host "üîç Estado de los servicios:" -ForegroundColor Yellow
docker-compose ps

Write-Host ""

# Mostrar informaci√≥n detallada si se solicita
if ($Detailed) {
    Write-Host "üìã Informaci√≥n detallada:" -ForegroundColor Yellow
    
    # Informaci√≥n de contenedores
    Write-Host "üê≥ Contenedores:" -ForegroundColor Cyan
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    
    Write-Host ""
    
    # Informaci√≥n de vol√∫menes
    Write-Host "üíæ Vol√∫menes:" -ForegroundColor Cyan
    docker volume ls --filter "name=sge"
    
    Write-Host ""
    
    # Informaci√≥n de redes
    Write-Host "üåê Redes:" -ForegroundColor Cyan
    docker network ls --filter "name=sge"
    
    Write-Host ""
}

# Verificar salud de los servicios si se solicita
if ($Health) {
    Write-Host "üè• Verificando salud de los servicios..." -ForegroundColor Yellow
    
    $services = @("odoo", "dolibarr", "odoo-db", "dolibarr-db", "nginx")
    
    foreach ($service in $services) {
        $health = docker-compose exec $service echo "OK" 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "  ‚úÖ $service: Saludable" -ForegroundColor Green
        } else {
            Write-Host "  ‚ùå $service: No saludable" -ForegroundColor Red
        }
    }
    
    Write-Host ""
}

# Mostrar informaci√≥n de acceso
Write-Host "üåê Acceso a las aplicaciones:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ P√°gina principal: http://localhost" -ForegroundColor White
Write-Host "  ‚Ä¢ Odoo ERP: http://localhost:8069" -ForegroundColor White
Write-Host "  ‚Ä¢ Dolibarr ERP: http://localhost:8080" -ForegroundColor White

Write-Host ""
Write-Host "üîë Credenciales por defecto:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Usuario: admin" -ForegroundColor White
Write-Host "  ‚Ä¢ Contrase√±a: admin_password_2024" -ForegroundColor White

Write-Host ""
Write-Host "üìã Comandos √∫tiles:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Ver logs: .\scripts\logs.ps1" -ForegroundColor White
Write-Host "  ‚Ä¢ Parar servicios: .\scripts\stop.ps1" -ForegroundColor White
Write-Host "  ‚Ä¢ Reiniciar: .\scripts\restart.ps1" -ForegroundColor White
Write-Host "  ‚Ä¢ Backup: .\scripts\backup.ps1" -ForegroundColor White

# Verificar si hay problemas
$runningServices = docker-compose ps --services --filter "status=running"
$totalServices = 5  # odoo, dolibarr, odoo-db, dolibarr-db, nginx

if ($runningServices.Count -eq $totalServices) {
    Write-Host ""
    Write-Host "‚úÖ Todos los servicios est√°n ejecut√°ndose correctamente" -ForegroundColor Green
} else {
    Write-Host ""
    Write-Host "‚ö†Ô∏è  Algunos servicios no est√°n ejecut√°ndose" -ForegroundColor Yellow
    Write-Host "Servicios ejecut√°ndose: $($runningServices.Count)/$totalServices" -ForegroundColor Yellow
}
